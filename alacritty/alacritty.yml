

# https://github.com/tmcdonell/config-alacritty/blob/master/alacritty.yml
font:
    normal:
        # Font family
        #
        # Default:
        #   - macOS Menlo
        #   - Linux monospace
        #   - Windows Consolas
        # The font 'Fira Code' has to be downloaded for this setting to work.
        family: 'Fira Code'

        style: Regular

    size: 18.0


# https://www.freecodecamp.org/news/manage-multiple-github-accounts-the-ssh-way-2dadc30ccaca/
schemes:
    solarized_light: &solarized_light
      # Default colors
      primary:
        background: '#fdf6e3' # base3
        foreground: '#657b83' # base00

      # Cursor colors
      cursor:
        text:   '#fdf6e3' # base3
        cursor: '#657b83' # base00

      # Normal colors
      normal:
        black:   '#073642' # base02
        red:     '#dc322f' # red
        green:   '#859900' # green
        yellow:  '#b58900' # yellow
        blue:    '#268bd2' # blue
        magenta: '#d33682' # magenta
        cyan:    '#2aa198' # cyan
        white:   '#eee8d5' # base2

      # Bright colors
      bright:
        black:   '#002b36' # base03
        red:     '#cb4b16' # orange
        green:   '#586e75' # base01
        yellow:  '#657b83' # base00
        blue:    '#839496' # base0
        magenta: '#6c71c4' # violet
        cyan:    '#93a1a1' # base1
        white:   '#fdf6e3' # base3

    monokai_dark: &monokai_dark
        # Default colors
        primary:
          background: '#272822'
          foreground: '#F8F8F2'

        # Normal colors
        normal:
         black:   '#272822'
         red:     '#F92672'
         green:   '#A6E22E'
         yellow:  '#F4BF75'
         blue:    '#66D9EF'
         magenta: '#AE81FF'
         cyan:    '#A1EFE4'
         white:   '#F8F8F2'

        # Bright colors
        bright:
         black:   '#75715E'
         red:     '#F92672'
         green:   '#A6E22E'
         yellow:  '#F4BF75'
         blue:    '#66D9EF'
         magenta: '#AE81FF'
         cyan:    '#A1EFE4'
         white:   '#F9F8F5'

colors: *monokai_dark


window:
    # Window padding
    #
    # Blank space added around the window in pixels. This padding is not scaled by
    # DPI and the specified value is always added at both opposing sides.
  padding:
    x: 5
    y: 5


selection:
  # Selection breaks on these characters if you double click on a string.
  semantic_escape_chars: ",│`|\"' ()[]{}<>"

  # When set to `true`, selected text will be copied to the primary clipboard.
  save_to_clipboard: true


cursor:
  # Cursor style
  #
  # Values for `style`:
  #   - ▇ Block
  #   - _ Underline
  #   - | Beam
  style: Beam

  # If this is `true`, the cursor will be rendered as a hollow box when the
  # window is not focused.
  unfocused_hollow: true


# Mouse bindings
#
# Available fields:
#   - mouse
#   - action
#   - mods (optional)
#
# Values for `mouse`:
#   - Middle
#   - Left
#   - Right
#   - Numeric identifier such as `5`
#
# All available `mods` and `action` values are documented in the key binding
# section.
mouse_bindings:
  - { mouse: Right, action: PasteSelection }


scrolling:
    # Maximum number of lines in the scrollback buffer.
    # Specifying '0' will disable scrolling.
    history: 0

    # Number of lines the viewport will move for every line scrolled when
    # scrollback is enabled.
    multiplier: 3


# Key bindings
#
# Key bindings are specified as a list of objects. Each binding will specify a
# key and modifiers required to trigger it, terminal modes where the binding is
# applicable, and what should be done when the key binding fires. It can either
# send a byte sequence to the running application (`chars`), execute a
# predefined action (`action`) or fork and execute a specified command plus
# arguments (`command`).
#
# Available fields:
#   - key
#   - mods (optional)
#   - chars | action | command (exactly one required)
#   - mode (optional)
#
# Values for `key`:
#   - `A` -> `Z`
#   - `F1` -> `F12`
#   - `Key1` -> `Key0`
#
#   A full list with available key codes can be found here:
#   https://docs.rs/glutin/*/glutin/enum.VirtualKeyCode.html#variants
#
# Values for `mods`:
#   - Command
#   - Control
#   - Option
#   - Super
#   - Shift
#   - Alt
#
#   Multiple `mods` can be combined using `|` like this: `mods: Control|Shift`.
#   Whitespace and capitalization is relevant and must match the example.
#
# Values for `chars`:
#   The `chars` field writes the specified string to the terminal. This makes
#   it possible to pass escape sequences.
#   To find escape codes for bindings like `PageUp` ("\x1b[5~"), you can run
#   the command `showkey -a` outside of tmux.
#   Note that applications use terminfo to map escape sequences back to
#   keys. It is therefore required to update the terminfo when
#   changing an escape sequence.
#
# Values for `action`:
#   - Paste
#   - PasteSelection
#   - Copy
#   - IncreaseFontSize
#   - DecreaseFontSize
#   - ResetFontSize
#   - ScrollPageUp
#   - ScrollPageDown
#   - ScrollLineUp
#   - ScrollLineDown
#   - ScrollToTop
#   - ScrollToBottom
#   - ClearHistory
#   - Hide
#   - Quit
#   - ClearLogNotice
#   - SpawnNewInstance
#   - ToggleFullscreen
#   - None
#
# Values for `action` (macOS only):
#   - ToggleSimpleFullscreen: Enters fullscreen without occupying another space
#
# Values for `command`:
#   The `command` field must be a map containing a `program` string and
#   an `args` array of command line parameter strings.
#
#   Example:
#       `command: { program: "alacritty", args: ["-e", "vttest"] }`
#
# Values for `mode`:
#   - ~AppCursor
#   - AppCursor
#   - ~AppKeypad
#   - AppKeypad
#
key_bindings:
    - { key: Return, mods: Command, action: ToggleFullscreen }
